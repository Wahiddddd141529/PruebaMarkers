// El bloque buildscript es para configurar a Gradle como tal
// Es para descargar las dependencias que configuraran a Gradle como tal, no hacen parte del codigo fuente.
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        // De aqui viene el plugin aggregator que esta en la linea 4
        classpath("net.serenity-bdd:serenity-gradle-plugin:2.0.80")
    }
}

plugins {
    id 'java-library'
}

// Para agregar un comando que se llama aggregate, que es de Serenity y es para construir el reporte
apply plugin: 'net.serenity-bdd.aggregator'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
// Dependencias para poder automatizar con Serenity
    implementation 'net.serenity-bdd:serenity-junit:2.0.80'
    implementation 'net.serenity-bdd:serenity-cucumber:1.9.45'
    implementation 'net.serenity-bdd:serenity-core:2.0.80'
    implementation 'org.slf4j:slf4j-simple:1.7.7'
    implementation 'com.google.guava:guava:23.0'
    testImplementation("junit:junit:4.13.2")
    testRuntimeOnly("org.junit.vintage:junit-vintage-engine:5.8.2")
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.28'
}

javadoc {
    options.charSet = 'UTF-8'
    options.encoding = 'UTF-8'
    options.tagletPath = [new File ('src/')]
    options.footer = "Copyleft © 2017 Blog Bitix"
    //options.bottom = "Copyleft © 2017 Blog Bitix"
}

// Para configurar propiedades del comando de ejecucion de pruebas con Gradle
test {
//Ignorar los fallos es ejecutar todas las pruebas asi alguna falle
    //ignoreFailures = true
    useJUnitPlatform()
}

// Configurar el encoding del proyecto
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Continue asi falle alguna tarea de Gradle
gradle.startParameter.continueOnFailure = true